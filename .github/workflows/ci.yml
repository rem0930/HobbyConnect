name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_TEST_DATABASE }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2

    - name: Set up environment variables
      run: |
        echo "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" >> $GITHUB_ENV
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> $GITHUB_ENV
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_TEST_DATABASE }}" >> $GITHUB_ENV
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> $GITHUB_ENV
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> $GITHUB_ENV

    - name: Create .env file
      run: |
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > backend/.env
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_TEST_DATABASE }}" >> backend/.env
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> backend/.env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> backend/.env
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> backend/.env
        echo "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" >> backend/.env
        echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" >> backend/.env

    - name: Install dependencies
      working-directory: ./backend
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3

    - name: Build Docker image
      working-directory: ./backend
      run: docker-compose --env-file .env build

    - name: Set up database
      working-directory: ./backend
      run: |
        cp config/database.yml.ci config/database.yml
        docker-compose run --rm -e RAILS_ENV=test --env-file .env backend rake db:create db:schema:load

    - name: Run RuboCop
      working-directory: ./backend
      run: docker-compose run --rm --env-file .env backend bundle exec rubocop

    - name: Run tests
      working-directory: ./backend
      run: docker-compose run --rm -e RAILS_ENV=test --env-file .env backend bundle exec rspec

    - name: Clean up
      working-directory: ./backend
      run: docker-compose down --volumes

