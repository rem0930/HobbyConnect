services:
  frontend:
    build: ./frontend
    ports:
      - '8000:8000' # フロントエンドは外部アクセスが必要
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://54.249.6.3/api
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules # node_modulesをホスト側と共有しない
    networks:
      - swing-net

  backend:
    build: ./backend
    ports:
      - '3000:3000' # バックエンドはフロントエンドとNginxからアクセスが必要
    expose:
      - '3000' # 内部通信用にも公開
    depends_on:
      - db
      - redis
    environment:
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    env_file:
      - .env
    command: bash -c "cron && rails server -b '0.0.0.0' -p 3000"
    volumes:
      - ./backend:/app # ソースコードをコンテナにマウント
    networks:
      - swing-net

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80' # Nginx は外部アクセスが必要
    depends_on:
      - frontend
      - backend
    networks:
      - swing-net

  db:
    image: mysql:8.0
    expose:
      - '3306' # 他のコンテナからのアクセスを許可
    volumes:
      - "./docker/db:/var/lib/mysql"
      - "./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306" # ローカルホストからもアクセスできるようにポートを公開
    networks:
      - swing-net

  redis:
    image: redis:7.2.5
    expose:
      - '6379' # 他のコンテナからのアクセスを許可
    volumes:
      - "./docker/redis/data:/data"
    ports:
      - "6379:6379" # ローカルホストからもアクセスできるようにポートを公開
    networks:
      - swing-net

networks:
  swing-net:

volumes:
  db-data:
